<?xml version="1.0" encoding="UTF-8" ?>
<Template>
	<TemplateConfiguration>
		<_Name>iOS Collection View Controller</_Name>
		<Icon>md-class-file</Icon>
		<_Category>iOS</_Category>
		<LanguageName>C#</LanguageName>
		<ProjectType>IPhone</ProjectType>
		<_Description>Custom set of classes for creating an iOS Collection View Controller.</_Description>
	</TemplateConfiguration>
	
	<Conditions>
		<PartialTypeSupport Requirement="Enabled" />
		<MacProject IsAssetCatalog="False"/>
	</Conditions>
	
	<TemplateFiles>
		<File name="${Name}Controller.${LanguageExtension}">
<![CDATA[
using System;
using System.Drawing;

using MonoTouch.Foundation;
using MonoTouch.UIKit;

namespace ${Namespace}
{
	public class ${Name}Controller : UICollectionViewController
	{
		public ${Name}Controller (UICollectionViewLayout layout) : base (layout)
		{
		}
		
		public override void DidReceiveMemoryWarning ()
		{
			// Releases the view if it doesn't have a superview.
			base.DidReceiveMemoryWarning ();
			
			// Release any cached data, images, etc that aren't in use.
		}
		
		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			
			// Register any custom UICollectionViewCell classes
			CollectionView.RegisterClassForCell (typeof (${Name}Cell), ${Name}Cell.Key);
			
			// Note: If you use one of the Collection View Cell templates to create a new cell type,
			// you can register it using the RegisterNibForCell() method like this:
			//
			// CollectionView.RegisterNibForCell (MyCollectionViewCell.Nib, MyCollectionViewCell.Key);
		}
		
		public override int NumberOfSections (UICollectionView collectionView)
		{
			// TODO: return the actual number of sections
			return 1;
		}
		
		public override int GetItemsCount (UICollectionView collectionView, int section)
		{
			// TODO: return the actual number of items in the section
			return 1;
		}
		
		public override UICollectionViewCell GetCell (UICollectionView collectionView, NSIndexPath indexPath)
		{
			var cell = collectionView.DequeueReusableCell (${Name}Cell.Key, indexPath) as ${Name}Cell;
			
			// TODO: populate the cell with the appropriate data based on the indexPath
			
			return cell;
		}
	}
}
]]>
		</File>
		<File name="${Name}Cell.${LanguageExtension}">
<![CDATA[
using System;
using System.Drawing;

using MonoTouch.Foundation;
using MonoTouch.UIKit;

namespace ${Namespace}
{
	public class ${Name}Cell : UICollectionViewCell
	{
		public static readonly NSString Key = new NSString ("${Name}Cell");
		
		[Export ("initWithFrame:")]
		public ${Name}Cell (RectangleF frame) : base (frame)
		{
			// TODO: add subviews to the ContentView, set various colors, etc.
			BackgroundColor = UIColor.Cyan;
		}
	}
}
]]>
		</File>
	</TemplateFiles>
</Template>
