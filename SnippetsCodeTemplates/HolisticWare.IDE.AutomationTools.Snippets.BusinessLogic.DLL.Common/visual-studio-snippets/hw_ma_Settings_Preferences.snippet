<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>hw_m4a_AutoComplete</Title>
			<Shortcut>hw_m4a_AutoComplete</Shortcut>
			<Description>hw_m4a_AutoComplete</Description>
			<Author>Miljenko Cvjetko mc++</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Declarations>
				<Literal>
					<ID>filename</ID>
					<ToolTip>File name</ToolTip>
					<Default>FileName</Default>
				</Literal>
			</Declarations>
			<Code Language="csharp">
				<![CDATA[
			//=========================================================================
			/*
			http://developer.android.com/reference/android/preference/package-summary.html
			http://www.kaloer.com/android-preferences
			
			1. 
			Create an XML file named list_item.xml and save it inside the 
				Resources\Layout\ folder. 
			Set the Build Action of this file to AndroidResource.
			This file defines a simple TextView that will be used for each item 
			that appears in the list of suggestions
			
			<?xml version="1.0" encoding="utf-8" ?>
			<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
					<PreferenceCategory
							android:title="First Category">
							<CheckBoxPreference
									android:title="Checkbox Preference"
									android:defaultValue="false"
									android:summary="This preference can be true or false"
									android:key="checkboxPref" />
							<ListPreference
									android:title="List Preference"
									android:summary="This preference allows to select an item in a array"
									android:key="listPref"
									android:defaultValue="digiGreen"
									android:entries="@array/listArray"
									android:entryValues="@array/listValues" />
					</PreferenceCategory>
					<PreferenceCategory
							android:title="Second Category">
					<EditTextPreference
							android:name="EditText Preference"
							android:summary="This allows you to enter a string"
							android:defaultValue="Nothing"
							android:title="Edit This Text"
							android:key="editTextPref" />
					<RingtonePreference
							android:name="Ringtone Preference"
							android:summary="Select a ringtone"
							android:title="Ringtones"
							android:key="ringtonePref" />
					<PreferenceScreen
							android:key="SecondPrefScreen"
							android:title="Second PreferenceScreen"
							android:summary="This is a second PreferenceScreen">
							<EditTextPreference
									android:name="An other EditText Preference"
									android:summary="This is a preference in the second PreferenceScreen"
									android:title="Edit text"
									android:key="SecondEditTextPref" />
					</PreferenceScreen>
					<Preference
							android:title="Custom Preference"
							android:summary="This works almost like a button"
							android:key="customPref" />
					</PreferenceCategory>
			</PreferenceScreen>		
			
			2. 
			Open the Resources\layout\main.xml file and insert the following:
			The TextView is a label that introduces the AutoCompleteTextView 
			widget.
			
			<?xml version="1.0" encoding="utf-8"?>
			<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" 
				android:orientation="horizontal"
				android:layout_width="fill_parent" 
				android:layout_height="wrap_content"
				android:padding="5dp">
				<TextView
					android:layout_width="wrap_content"
					android:layout_height="wrap_content"
					android:text="Country" />
				<AutoCompleteTextView android:id="@+id/autocomplete_country"
					android:layout_width="fill_parent"
					android:layout_height="wrap_content"
					android:layout_marginLeft="5dp"/>
			</LinearLayout>
			*/

			/// Into Activity
			protected 
				override 
				void 
				OnCreate 
				(
				  Bundle bundle
				)
				{
					base.OnCreate (bundle);

					// Set our view from the "Main" layout resource
					SetContentView (Resource.Layout.Main);

					AutoCompleteTextView textView = 
							FindViewById<AutoCompleteTextView> 
							(
							  Resource.Id.autocomplete_country
							);
					ArrayAdapter<String> adapter = new ArrayAdapter<String> 
													(
													  this
													, Resource.Layout.list_item
													, COUNTRIES
													);

					textView.Adapter = adapter;
				}			
			//=========================================================================
]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>